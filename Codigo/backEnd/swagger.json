{
    "openapi": "3.0.0",
    "info": {
      "title": "AutoFarm - API de Animais e Compradores",
      "description": "API para gerenciar operações relacionadas a animais e compradores em propriedades rurais.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:3500",
        "description": "API de produção"
      }
    ],
    "paths": {
      "/api/protected": {
        "get": {
          "summary": "Endpoint protegido",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Acesso permitido"
            },
            "401": {
              "description": "Não autorizado"
            },
            "403": {
              "description": "Token inválido"
            }
          }
        }
      },
      "/api/admin": {
        "get": {
          "summary": "Endpoint para administradores",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Acesso permitido para administradores"
            },
            "401": {
              "description": "Não autorizado"
            },
            "403": {
              "description": "Token inválido"
            }
          },
          "x-roles": [
            "admin"
          ]
        }
      },
      "/animal": {
        "get": {
          "summary": "Obter todos os animais",
          "description": "Retorna uma lista de todos os animais.",
          "tags": [
            "Animal"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de animais retornada com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Animal"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Nenhum animal encontrado."
            }
          }
        },
        "post": {
          "summary": "Criar um novo animal",
          "description": "Cria um novo registro de animal.",
          "tags": [
            "Animal"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Animal"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Animal criado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Animal"
                  }
                }
              }
            },
            "400": {
              "description": "Dados inválidos para criação."
            }
          }
        }
      },
      "/animal/{id}": {
        "get": {
          "summary": "Obter animal por ID",
          "description": "Retorna os detalhes de um animal específico pelo ID.",
          "tags": [
            "Animal"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do animal que será retornado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Animal encontrado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Animal"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum animal encontrado com o ID especificado."
            }
          }
        },
        "put": {
          "summary": "Atualizar animal",
          "description": "Atualiza as informações de um animal existente.",
          "tags": [
            "Animal"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do animal a ser atualizado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Animal"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Animal atualizado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Animal"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum animal encontrado com o ID especificado."
            }
          }
        },
        "delete": {
          "summary": "Deletar animal",
          "description": "Remove um animal da base de dados.",
          "tags": [
            "Animal"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do animal que será deletado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Animal deletado com sucesso."
            },
            "204": {
              "description": "Nenhum animal encontrado com o ID especificado."
            }
          }
        }
      },
      "/login": {
        "post": {
          "summary": "Login de usuário",
          "description": "Autentica um usuário e retorna um token de acesso.",
          "tags": [
            "Animal"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login bem-sucedido.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "description": "Token de acesso gerado."
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Email e senha são obrigatórios."
            },
            "401": {
              "description": "Credenciais inválidas."
            }
          }
        }
      },
      "/comprador": {
        "get": {
          "summary": "Obter todos os compradores",
          "description": "Retorna uma lista de todos os compradores.",
          "tags": [
            "Comprador"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de compradores retornada com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Comprador"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Nenhum comprador encontrado."
            }
          }
        },
        "post": {
          "summary": "Criar um novo comprador",
          "description": "Cria um novo registro de comprador.",
          "tags": [
            "Comprador"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comprador"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Comprador criado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Comprador"
                  }
                }
              }
            },
            "400": {
              "description": "Dados inválidos para criação."
            }
          }
        }
      },
      "/comprador/{id}": {
        "get": {
          "summary": "Obter comprador por ID",
          "description": "Retorna os detalhes de um comprador específico pelo ID.",
          "tags": [
            "Comprador"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do comprador que será retornado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Comprador encontrado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Comprador"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum comprador encontrado com o ID especificado."
            }
          }
        },
        "put": {
          "summary": "Atualizar comprador",
          "description": "Atualiza as informações de um comprador existente.",
          "tags": [
            "Comprador"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do comprador a ser atualizado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comprador"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Comprador atualizado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Comprador"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum comprador encontrado com o ID especificado."
            }
          }
        },
        "delete": {
          "summary": "Deletar comprador",
          "description": "Remove um comprador da base de dados.",
          "tags": [
            "Comprador"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do comprador que será deletado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Comprador deletado com sucesso."
            },
            "204": {
              "description": "Nenhum comprador encontrado com o ID especificado."
            }
          }
        }
      },
      "/endereco": {
        "get": {
          "summary": "Obter todos os endereços",
          "description": "Retorna uma lista de todos os endereços.",
          "tags": [
            "Endereço"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de endereços retornada com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Endereco"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Nenhum endereço encontrado."
            }
          }
        },
        "post": {
          "summary": "Criar um novo endereço",
          "description": "Cria um novo registro de endereço.",
          "tags": [
            "Endereço"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endereco"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Endereço criado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Endereco"
                  }
                }
              }
            },
            "400": {
              "description": "Dados inválidos para criação."
            }
          }
        }
      },
      "/endereco/{id}": {
        "get": {
          "summary": "Obter endereço por ID",
          "description": "Retorna os detalhes de um endereço específico pelo ID.",
          "tags": [
            "Endereço"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do endereço que será retornado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Endereço encontrado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Endereco"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum endereço encontrado com o ID especificado."
            }
          }
        },
        "put": {
          "summary": "Atualizar endereço",
          "description": "Atualiza as informações de um endereço existente.",
          "tags": [
            "Endereço"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do endereço a ser atualizado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endereco"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Endereço atualizado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Endereco"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum endereço encontrado com o ID especificado."
            }
          }
        },
        "delete": {
          "summary": "Deletar endereço",
          "description": "Remove um endereço da base de dados.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do endereço que será deletado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Endereço deletado com sucesso."
            },
            "204": {
              "description": "Nenhum endereço encontrado com o ID especificado."
            }
          }
        }
      },
      "/funcionario": {
        "get": {
          "summary": "Obter todos os funcionários",
          "description": "Retorna uma lista de todos os funcionários.",
          "tags": [
            "Funcionário"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de funcionários retornada com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Funcionario"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Nenhum funcionário encontrado."
            }
          }
        },
        "post": {
          "summary": "Criar um novo funcionário",
          "description": "Cria um novo registro de funcionário.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Funcionario"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Funcionário criado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Funcionario"
                  }
                }
              }
            },
            "400": {
              "description": "Dados inválidos para criação."
            }
          }
        }
      },
      "/funcionario/{id}": {
        "get": {
          "summary": "Obter funcionário por ID",
          "description": "Retorna os detalhes de um funcionário específico pelo ID.",
          "tags": [
            "Funcionário"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do funcionário que será retornado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Funcionário encontrado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Funcionario"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum funcionário encontrado com o ID especificado."
            }
          }
        },
        "put": {
          "summary": "Atualizar funcionário",
          "description": "Atualiza as informações de um funcionário existente.",
          "tags": [
            "Funcionário"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do funcionário a ser atualizado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Funcionario"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Funcionário atualizado com sucesso.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Funcionario"
                  }
                }
              }
            },
            "204": {
              "description": "Nenhum funcionário encontrado com o ID especificado."
            }
          }
        },
        "delete": {
          "summary": "Deletar funcionário",
          "description": "Remove um funcionário da base de dados.",
          "tags": [
            "Funcionário"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID do funcionário que será deletado.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Funcionário deletado com sucesso."
            },
            "204": {
              "description": "Nenhum funcionário encontrado com o ID especificado."
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "schemas": {
        "Animal": {
          "type": "object",
          "properties": {
            "nome": {
              "type": "string",
              "description": "Nome do animal."
            },
            "sexo": {
              "type": "string",
              "enum": [
                "macho",
                "femea"
              ],
              "description": "Sexo do animal."
            },
            "nascimento": {
              "type": "string",
              "format": "date",
              "description": "Data de nascimento do animal."
            },
            "raca": {
              "type": "string",
              "description": "Raça do animal."
            }
          },
          "required": [
            "nome",
            "sexo",
            "nascimento",
            "raca"
          ]
        },
        "UserLogin": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Email do usuário."
            },
            "password": {
              "type": "string",
              "description": "Senha do usuário."
            }
          },
          "required": [
            "email",
            "password"
          ]
        },
        "Comprador": {
          "type": "object",
          "properties": {
            "nome": {
              "type": "string",
              "description": "Nome do comprador."
            },
            "email": {
              "type": "string",
              "description": "Email do comprador."
            },
            "cpfCnpj": {
              "type": "string",
              "description": "CPF ou CNPJ do comprador."
            },
            "registroLeilao": {
              "type": "integer",
              "description": "Registro do leilão do comprador."
            },
            "pagamento": {
              "type": "string",
              "enum": [
                "debito",
                "credito",
                "dinheiro",
                "pix",
                "boleto"
              ],
              "description": "Método de pagamento do comprador."
            }
          },
          "required": [
            "nome",
            "email",
            "cpfCnpj",
            "registroLeilao",
            "pagamento"
          ]
        },
        "Endereco": {
          "type": "object",
          "properties": {
            "cep": {
              "type": "string",
              "description": "Código postal."
            },
            "rua": {
              "type": "string",
              "description": "Nome da rua."
            },
            "bairro": {
              "type": "string",
              "description": "Nome do bairro."
            },
            "cidade": {
              "type": "string",
              "description": "Nome da cidade."
            },
            "estado": {
              "type": "string",
              "description": "Nome do estado."
            },
            "pais": {
              "type": "string",
              "description": "Nome do país."
            }
          },
          "required": [
            "rua",
            "bairro",
            "cidade",
            "estado",
            "pais"
          ]
        },
        "Funcionario": {
          "type": "object",
          "properties": {
            "nome": {
              "type": "string",
              "description": "Nome do funcionário."
            },
            "email": {
              "type": "string",
              "description": "Email do funcionário."
            },
            "horas": {
              "type": "number",
              "description": "Número de horas trabalhadas."
            },
            "salario": {
              "type": "number",
              "description": "Salário do funcionário."
            },
            "senha": {
              "type": "string",
              "description": "Senha do funcionário."
            }
          },
          "required": [
            "nome",
            "email",
            "horas",
            "salario",
            "senha"
          ]
        }
      }
    }
  }